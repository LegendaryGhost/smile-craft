<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="minimizePictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        gg==
</value>
  </data>
</root>